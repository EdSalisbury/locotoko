{
  "openapi": "3.0.3",
  "info": {
    "title": "LocoToko API",
    "description": "Inventory Manager for Online Listings",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "https://example.com/api/v1"
    }
  ],
  "paths": {
    "/items": {
      "get": {
        "summary": "Gets all inventory items",
        "tags": ["items"],
        "responses": {
          "200": {
            "description": "All inventory items.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/items"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Adds inventory item",
        "tags": ["items"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/item"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully added inventory item.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/item"
                }
              }
            }
          }
        }
      }
    },
    "/items/{id}": {
      "get": {
        "summary": "Gets single inventory item",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            },
            "required": true,
            "description": "UUID of the inventory item to get"
          }
        ],
        "tags": ["items"],
        "responses": {
          "200": {
            "description": "A single inventory item.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/item"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Replaces inventory item",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            },
            "required": true,
            "description": "UUID of the inventory item to replace"
          }
        ],
        "tags": ["items"],
        "responses": {
          "200": {
            "description": "Replaced inventory item.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/item"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Updates inventory item",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            },
            "required": true,
            "description": "UUID of the inventory item to update"
          }
        ],
        "tags": ["items"],
        "responses": {
          "200": {
            "description": "Updated inventory item.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/item"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes inventory item",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            },
            "required": true,
            "description": "UUID of the inventory item to delete"
          }
        ],
        "tags": ["items"],
        "responses": {
          "200": {
            "description": "Deleted inventory item.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/item"
                }
              }
            }
          }
        }
      }
    },
    "/owners": {
      "get": {
        "summary": "Gets all owners",
        "tags": ["owners"],
        "responses": {
          "200": {
            "description": "All owners.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/owners"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Adds owner",
        "tags": ["owners"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/owner"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully added owner.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/owner"
                }
              }
            }
          }
        }
      }
    },
    "/owners/{id}": {
      "get": {
        "summary": "Gets single owner",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            },
            "required": true,
            "description": "UUID of the owner to get"
          }
        ],
        "tags": ["owners"],
        "responses": {
          "200": {
            "description": "A single owner.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/owner"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Replaces owner",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            },
            "required": true,
            "description": "UUID of the owner to replace"
          }
        ],
        "tags": ["owners"],
        "responses": {
          "200": {
            "description": "Replaced owner.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/owner"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Updates owner",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            },
            "required": true,
            "description": "UUID of the owner to update"
          }
        ],
        "tags": ["owners"],
        "responses": {
          "200": {
            "description": "Updated owner.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/owner"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes owner",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            },
            "required": true,
            "description": "UUID of the owner to delete"
          }
        ],
        "tags": ["owners"],
        "responses": {
          "200": {
            "description": "Deleted owner.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/owner"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "uuid": {
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
        "minLength": 36,
        "maxLength": 36
      },
      "item": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/uuid"
          },
          "title": {
            "type": "string",
            "minLength": 3,
            "maxLength": 80
          },
          "description": {
            "type": "string"
          },
          "acquisitionDate": {
            "type": "string",
            "format": "date"
          },
          "quantity": {
            "type": "integer",
            "default": 1
          },
          "weightPounds": {
            "type": "integer"
          },
          "weightOunces": {
            "type": "integer"
          },
          "shipWeightPounds": {
            "type": "integer"
          },
          "shipWeightOunces": {
            "type": "integer"
          },
          "sizeHeightInches": {
            "type": "integer"
          },
          "sizeWidthInches": {
            "type": "integer"
          },
          "sizeDepthInches": {
            "type": "integer"
          },
          "shipSizeHeightInches": {
            "type": "integer"
          },
          "shipSizeWidthInches": {
            "type": "integer"
          },
          "shipSizeDepthInches": {
            "type": "integer"
          }
        },
        "example": {
          "id": "2599a7ec-fd5b-43b7-bf34-a8b6d48f060b",
          "title": "Black Lotus - Alpha - MTG - Magic the Gathering - NM/M x1",
          "description": "This is the most valuable Magic card - don't miss out!",
          "acquisitionDate": "2022-04-01",
          "quantity": 1,
          "weightPounds": 0,
          "weightOunces": 1,
          "shipWeightPounds": 0,
          "shipWeightOunces": 5,
          "sizeWidthInches": 4,
          "sizeHeightInches": 3,
          "sizeDepthInches": 1,
          "shipSizeHeightInches": 9,
          "shipSizewidthInches": 6,
          "shipSizeDepthInches": 1
        }
      },
      "items": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/item"
        }
      },
      "owner": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/uuid"
          },
          "name": {
            "type": "string"
          },
          "rate": {
            "type": "number",
            "format": "float"
          }
        },
        "example": {
          "id": "20944efa-2cdc-4dea-a24b-aabf2d633141",
          "name": "Ed Salisbury",
          "rate": 1.0
        }
      },
      "owners": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/owner"
        }
      }
    }
  }
}
