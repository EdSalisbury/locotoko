generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email String @unique
  hash String
  name String

  listedItems Item[] @relation("listingUser")
  shippedItems Item[] @relation("shippingUser")

  @@map("users")
}

model Item {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title String
  description String?
  ebayCategory EbayCategory @relation("itemEbayCategory", fields: [ebayCategoryId], references: [id])
  ebayCategoryId Int
  ebayListingId String?
  ebayListing EbayListing? @relation("itemEbayListing", fields: [ebayListingId], references: [id])
  price Decimal @db.Money
  currentPrice Decimal? @db.Money @default(0.00)
  soldAt DateTime?
  soldPrice Decimal @db.Money @default(0.00)
  shippedAt DateTime?
  ebayConditionId Int @default(0)
  listingUser User @relation("listingUser", fields: [listingUserId], references: [id])
  listingUserId String
  shippingUser User? @relation("shippingUser", fields: [shippingUserId], references: [id])
  shippingUserId String?
  ownerId String
  owner Owner @relation(fields: [ownerId], references: [id])
  quantity Int
  quantitySold Int @default(0)
  location String?
  weightPounds Int?
  weightOunces Int?
  shipWeightPounds Int?
  shipWeightOunces Int?
  sizeHeightInches Int?
  sizeWidthInches Int?
  sizeDepthInches Int?
  shipSizeHeightInches Int?
  shipSizeWidthInches Int?
  shipSizeDepthInches Int?
  specifics String?
  templateId String?
  images String[]
  acquisitionId String?
  upc String?
  ready Boolean @default(false)
  listedAt DateTime?
  endedAt DateTime?
  markdownPct Int?
  shippingPrice Decimal? @db.Money @default(0.00)
  shippingType Int?
  
  @@map("items")
}

model Owner {
  id String @id @default(cuid())
  name String
  rate Decimal

  items Item[]
  payouts Payout[]

  @@map("owners")
}

model EbayCategory {
  id Int @id
  name String
  parentId Int
  leaf Boolean @default(false)
  level Int @default(0)
  items Item[] @relation("itemEbayCategory")

  @@map("ebayCategories")
}

model Template {
  id String @id @default(cuid())
  name String
  ebayCategoryId Int
  specifics String?

  weightPounds Int?
  weightOunces Int?
  shipWeightPounds Int?
  shipWeightOunces Int?
  sizeHeightInches Int?
  sizeWidthInches Int?
  sizeDepthInches Int?
  shipSizeHeightInches Int?
  shipSizeWidthInches Int?
  shipSizeDepthInches Int?
  location String?
  title String?
  description String?
  
  @@map("templates")
}

model Acquisition {
  id String @id @default(cuid())
  name String
  price Decimal @db.Money
  date DateTime

  @@map("acquisitions")
}

model EbayListing {
  id String @id
  itemId String
  item Item? @relation("itemEbayListing")

  @@map("ebayListings")
}

model Payout {
  id String @id @default(cuid())
  ownerId String
  owner Owner @relation(fields: [ownerId], references: [id])
  amount Decimal @db.Money
  date DateTime

  @@map("payouts")
}
